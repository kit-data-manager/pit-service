# General Spring Boot Settings (do not change!)

spring.main.allow-bean-definition-overriding=true
spring.data.rest.detection-strategy:annotated

# Server Settings for defining port and security

server.port: 8060
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: test123
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

# Data transfer settings, e.g. transfer compression and multipart message size. 
# The properties max-file-size and max-request-size define the maximum size of files 
# transferred to and from the repository. Setting them to -1 removes all limits.

server.compression.enabled: false
spring.servlet.multipart.max-file-size: 100MB
spring.servlet.multipart.max-request-size: 100MB
   
# Spring Management Endpoint Settings. By default, the health endpoint will be 
# enabled to apply service monitoring including detailed information. 
# Furthermore, all endpoints will be exposed to external access. If this is not desired, 
# just comment the property 'management.endpoints.web.exposure.include' in order to only 
# allow local access.

management.endpoint.health.enabled: true
management.endpoint.health.show-details: ALWAYS
management.endpoint.health.sensitive: false
management.endpoints.web.exposure.include: *

# Logging Settings. Most logging of KIT DM is performed on TRACE level. However, if you
# plan to enable logging with this granularity it is recommended to this only for 
# a selection of a few packages. Otherwise, the amount of logging information might be
# overwhelming.

#logging.level.root: ERROR
#logging.level.edu.kit.datamanager.doip:TRACE
logging.level.edu.kit: DEBUG
#logging.level.org.springframework.transaction: TRACE
logging.level.org.springframework: WARN 
logging.level.org.springframework.amqp: WARN
logging.level.com.zaxxer.hikari: DEBUG

###################################################################
##################  Repository Specific Settings ##################
###################################################################

# Enable/disable (default) authentication. If authentication is enabled, a separate 
# Authentication Service should be used in order to obtain JSON Web Tokens holding 
# login information. The token has then to be provided within the Authentication header
# of each HTTP request with a value of 'Bearer <TOKEN>' without quotes, replacing <TOKEN>
# be the token obtained from the authentication service.

repo.auth.enabled: false
# The jwtSecret is the mutual secret between all trusted services. This means, that if
# authentication is enabled, the jwtSecret used by the Authentication Service to sign
# issued JWTokens must be the same as the jwtSecret of the repository in order to 
# be able to validate the signature. By default, the secret should be selected randomly
# and with a sufficient length.

repo.auth.jwtSecret: vkfvoswsohwrxgjaxipuiyyjgubggzdaqrcuupbugxtnalhiegkppdgjgwxsmvdb

# Enable (default)/disable messaging. The messaging functionality requires a RabbitMQ
# server receiving and distributing the messages sent by the repository. The server is 
# accessed via repo.messaging.hostname and repo.messaging.port 
# The property 'repo.messaging.topic' defines the topic where messages are sent, whereas 
# the all properties with 'binding' define from where messages are received, e.g. the 
# exchange aka. topic and the queue. The routingKeys are defining wich messages are 
# routed to the aforementioned queue.
repo.messaging.enabled: false
repo.messaging.hostname: localhost
repo.messaging.port: 5672
repo.messaging.sender.exchange: record_events

# The rate in milliseconds at which the repository itself will check for new messages.
# E.g. if a resource has been created, the repository may has to perform additional
# ingest steps. Therefor, special handlers can be added which will be executed at the
# configured repo.schedule.rate if a new message has been received.
repo.schedule.rate:1000

# Enable (default)/disable audit functionalities. Auditing captures on the one hand 
# information about events occured at managed resources, e.g. create, update, delete 
# events, on the other hand the audit functionalty enabled versioning of resources.

repo.audit.enabled:true

###################################
##### Plugin Related Settings #####
###################################

# The repository base URL used by a plugin to obtain resources via the RESTful API. 
# This property is generic for all plugins and mainly depends on the property 
# 'server.port' defined at the beginning of this document.
repo.plugin.repositoryBaseUrl:http://localhost:8090/api/v1/dataresources/


###################################
######### OAI-PMH Plugin ##########
###################################

# Maximum number of elements delivered by the OAI-PMH endpoint (if enabled) before 
# making use of resumption tokens.
repo.plugin.oaipmh.maxElementsPerList:100

##################################################
######### Gemma Metadata Mapping Plugin ##########
##################################################

# Absolute path to the local python interpreter
repo.plugin.gemma.pythonLocation:/Users/jejkal/anaconda/bin/python
# Absolute path to the local gemma mapping script mapping_single.py' 
repo.plugin.gemma.gemmaLocation:/Users/jejkal/NetBeansProjects/KITDM-2.0/gemma/mapping_single.py
# Absolute path to the local gemma mappings folder
repo.plugin.gemma.mappingsLocation:/Users/jejkal/NetBeansProjects/KITDM-2.0/gemma-plugin/mappings
# List of schema mappings containing the content type as key in squared brackets and the 
# according mapping filename as value. The mapping filename must be located at 
# 'repo.plugin.gemma.mappingsLocation'.
repo.plugin.gemma.schemaMappings[application/vnd.datamanager.data-resource+json]:simple_mapping.json
repo.plugin.gemma.schemaMappings[application/json]:simple_mapping.json

##################################################
############ Elastic Indexing Plugin #############
##################################################

# Hostname and port of the elastic instance
#repo.plugin.elastic.hostname:localhost
#repo.plugin.elastic.port:9300

# List of one or more indexing rules applied to repository content elements to decide
# if and where an element should be indexed. Each rule has a type which is one of HAS_TAG,
# PATH_MATCHES, or MEDIA_TYPE_MATCHES and an index which denotes the elastic index where
# the according element will be registered to. The value differes between the rule types.
# For PATCH_MATCHES value contains a regular expression matched against each content
# element. A value of 'generated/.* means that all content elements in folder 'generated'
# are matching the rule. Rule HAS_TAG compared assigned tags of a content element with
# the provided tag. If multiple tags should be checked, multiple rules have to be defined
# referring to the same index. The same applies to MEDIA_TYPE_MATCHES, where the 
# media type of a content element is compared to the provided type.
#repo.plugin.elastic.rules[0].type:PATH_MATCHES
#repo.plugin.elastic.rules[0].value:generated/.*
#repo.plugin.elastic.rules[0].index:myindex

#repo.plugin.elastic.rules[1].type:HAS_TAG
#repo.plugin.elastic.rules[1].value:do index
#repo.plugin.elastic.rules[1].index:firstIndex

#repo.plugin.elastic.rules[2].type:MEDIA_TYPE_MATCHES
#repo.plugin.elastic.rules[2].value:application/json
#repo.plugin.elastic.rules[2].index:firstIndex

##################################################
################## DOIP Plugin ###################
##################################################
repo.plugin.doip.enabled:true
repo.plugin.doip.port:9000
repo.plugin.doip.repoBaseUri:http://localhost:8090/api/v1/dataresources/

#######################################################
################## Content Versioning #################
#######################################################

#Can be one of: none, simple, ocfl
repo.file.versioning.default:simple

#OCFL Settings#
ocfl.root.repositories.path=/Users/jejkal/tmp/ocfl/
ocfl.storage.layout=flat
ocfl.storage.layout.truncated.segment.length=4
ocfl.storage.layout.truncated.dept.tree.length=3
ocfl.root.repository.name=ocflRepository
ocfl.hashing.digest.algorithm=md5
ocfl.repository.statistics.file.name=statistic.json
ocfl.default.repository=default

################
### Keycloak ###
################
spring.autoconfigure.exclude=org.keycloak.adapters.springboot.KeycloakAutoConfiguration,org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
#keycloakjwt.jwk-url=http://localhost:8080/auth/realms/myrealm/protocol/openid-connect/certs
#keycloakjwt.resource=keycloak-angular
#keycloakjwt.jwt-claim=preferred_username
##keycloakjwt.connect-timeoutms=500 //optional
##keycloakjwt.read-timeoutms=500 // optional
#
#keycloak.realm = myrealm
#keycloak.auth-server-url = http://localhost:8080/auth
#keycloak.resource = keycloak-angular

#######################################################
##################### PIT Service ### #################
#######################################################
pit.pidsystem.handle.baseURI = http://hdl.handle.net/
#https://75.150.60.33:8006
#pit.pidsystem.handle.userName = 300:11043.4/admin
#pit.pidsystem.handle.userPassword = password
#pit.pidsystem.handle.generatorPrefix = 11043.4

pit.typeregistry.baseURI = http://dtr-test.pidconsortium.eu/
#http://typeregistry.org/registrar
pit.pidsystem.implementation = IN_MEMORY
pit.validation.strategy:embedded-strict

####################################
# Storing known PIDs in a database #
### (Also required for messaging) ##
####################################

pit.storage.strategy: keep-resolved-and-modified
spring.datasource.driver-class-name: org.h2.Driver
# WARNING: If no URL is being defined, an in-memory database is being used.
#spring.datasource.url:  jdbc:h2:file:./database;MODE=LEGACY;NON_KEYWORDS=VALUE
spring.datasource.username: typid
spring.datasource.password: secure_me
spring.jpa.hibernate.ddl-auto: update
